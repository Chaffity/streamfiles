{"version":3,"sources":["node_modules/@emphori/fui-core/lib/fui-core.js","node_modules/@emphori/fui-html/lib/fui-html.js","node_modules/@emphori/fui/html.js","app/main.ts"],"names":[],"mappings":";AAAA,aAEA,OAAA,QAAA,GAAA,MAAA,EAAA,OAAA,GAAA,EAAA,YAEA,MAAA,EAAA,GAAA,CAAA,GAAA,OAAA,OAAA,EAAA,IACA,EAAA,GAMA,IAAA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAMA,KAAA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,CAAA,KAMA,MAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAnBA,CAoBA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAMA,OAAA,IAAA,MAAA,EAAA,CACA,IAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA;;AC/BA,aAEA,MAAA,EAAA,QAAA,qBAEA,OAAA,QAAA,EAAA,CACA,MAAA,GACA,SAAA,cAAA,GAGA,OAAA,EAAA,GACA,EAAA,YAAA,KAGA,IAAA,CACA,KAAA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,GACA,KAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,aAAA,EAAA,IACA,KAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA;;AChBA,aAEA,OAAA,QAAA,QAAA;;ACFA,aAIA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFA,IAAA,EAAA,QAAA,qBAEA,SAAS,cAAc,QAAQ,YAAY,EAAA,KAAK,KAAK,QAAV","file":"main.6229eda7.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nmodule.exports = ({ build, append }, methods = (() => {})) => {\n\n  const core = f => ((tap) => Object.assign(f, {\n    ...methods(tap),\n\n    /**\n     * Similar to the `map` method in a traditional Reader monad, this method takes the output of the previous function,\n     * modifies it, and returns it.\n     */\n    add: g => tap((x, fx) => append(fx, g(x))),\n\n    /**\n     * Similiar to the `flatMap`, or `chain` method in a traditional Reader monad, this method takes the output of the\n     * previous function, and returns a new monad.\n     */\n    lift: g => tap((x, fx) => append(fx, g(x)(x))),\n\n    /**\n     * Similar to the `local` method in a traditional Reader monad, this method alters the execution environment in\n     * child compositions will be run under.\n     */\n    scope: g => core(x => f(g(x))),\n  }))(g => core(x => (g(x, x = f(x)), x)));\n\n  /**\n   * The almighty `Proxy` is what gives this rendering engine its true strength. HTML elements are interpreted as they\n   * are imported, rather than being preconfigured.\n   */\n  return new Proxy(core, {\n    get: (_, prop) => core(() => build(prop)),\n  })\n};\n","'use strict';\n\nconst core = require('@emphori/fui-core');\n\nmodule.exports = core({\n  build(prop) {\n    return document.createElement(prop)\n  },\n\n  append(a, b) {\n    a.appendChild(b)\n  },\n\n}, (tap) => ({\n  text: (x) => tap((_, fx) => fx.innerHTML = x),\n  attr: (k, v) => tap((_, fx) => fx.setAttribute(k, v)),\n  prop: (k, v) => tap((_, fx) => fx[k] = v),\n}));\n","'use strict';\n\nmodule.exports = require('@emphori/fui-html');\n","'use strict';\n\nimport { main } from '@emphori/fui/html';\n\ndocument.querySelector('body').appendChild(main.text('hello')());\n"]}